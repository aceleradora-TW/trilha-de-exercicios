buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

ext {
    temas = [
            'logica',
            'introducao',
            'oo'
    ]

    dificuldades = [
            'facil',
            'medio',
            'dificil'
    ]
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.thoughtworks.gauge:gauge-java:+'
    compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}"
    compile "org.flywaydb:flyway-core"
    compile "org.postgresql:postgresql:42.2.5"
}

sourceSets {
    main {
        java {
            srcDirs = [
                    "$rootDir/src/java/main",
                    "$rootDir/src/javascript/main"
            ]
        }
    }

    test {
        java {
            srcDirs = [
                    "$rootDir/src/java/test",
                    "$rootDir/src/javascript/test",
            ]
        }
    }
}

private def gaugeControl(Exec task, List<String> params) {
    task.commandLine = ["$rootDir/gaugectl"] + params
}

task injectManifestJs(type: Exec) {
    gaugeControl delegate, ["inject-manifest", "js", rootDir]
}

task injectManifestJava(type: Exec) {
    gaugeControl delegate, ["inject-manifest", "java", rootDir]
}

task runJsSpecs(type: Exec) {
    gaugeControl delegate, ["run", "javascript"]
}

task runJavaSpecs(type: Exec) {
    gaugeControl delegate, ["run", "java"]
}

task deleteManifest(type: Exec) {
    gaugeControl delegate, ["remove-manifest", rootDir]
}

task openReport(type: Exec, dependsOn: 'deleteManifest') {
    gaugeControl delegate, ["open-report"]
}

task testeJava(dependsOn: 'injectManifestJava')
task testeJs(dependsOn: 'injectManifestJs')

testeJava.finalizedBy(runJavaSpecs)
runJavaSpecs.finalizedBy(openReport)

testeJs.finalizedBy(runJsSpecs)
runJsSpecs.finalizedBy(openReport)

